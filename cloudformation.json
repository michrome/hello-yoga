{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This stack will only work correctly in the US East (N. Virginia) Region (us-east-1) because CloudFront only supports ACM certificates in that region.",
  "Parameters": {
    "MyDomainName": {
      "Type": "String",
      "Default": "hello-yoga.co.uk",
      "Description": "The domain we're deploying"
    }
  },
  "Resources": {
    "HostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "HostedZoneConfig": {
          "Comment": {
            "Fn::Sub": [
              "Managed by ${StackName} stack.",
              { "StackName": { "Ref": "AWS::StackName" } }
            ]
          }
        },
        "Name": { "Ref": "MyDomainName" }
      }
    },
    "EmailDnsRecords": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Properties": {
        "Comment": "DNS records for iCloud Mail",
        "HostedZoneId": { "Ref": "HostedZone" },
        "RecordSets": [
          {
            "Name": "hello-yoga.co.uk",
            "ResourceRecords": [
              "\"v=spf1 redirect=icloud.com\"",
              "\"apple-domain=YJSfSmnGhO5EbjA5\""
            ],
            "TTL": 3600,
            "Type": "TXT"
          },
          {
            "Name": "hello-yoga.co.uk",
            "ResourceRecords": [
              "10 mx01.mail.icloud.com.",
              "10 mx02.mail.icloud.com."
            ],
            "TTL": 3600,
            "Type": "MX"
          },
          {
            "Name": "sig1._domainkey.hello-yoga.co.uk",
            "ResourceRecords": [
              "sig1.dkim.hello-yoga.co.uk.at.icloudmailadmin.com."
            ],
            "TTL": 3600,
            "Type": "CNAME"
          }
        ]
      }
    },
    "WebDnsRecords": {
      "Type": "AWS::Route53::RecordSetGroup",
      "Properties": {
        "Comment": "DNS records for Netlify hosting",
        "HostedZoneId": { "Ref": "HostedZone" },
        "RecordSets": [
          {
            "Name": "hello-yoga.co.uk",
            "ResourceRecords": ["75.2.60.5"],
            "TTL": 3600,
            "Type": "A"
          },
          {
            "Name": "www.hello-yoga.co.uk",
            "ResourceRecords": ["hello-yoga.netlify.com"],
            "TTL": 3600,
            "Type": "CNAME"
          },
          {
            "Name": "aws.hello-yoga.co.uk",
            "ResourceRecords": [{ "Fn::GetAtt": ["WebsiteCDN", "DomainName"] }],
            "TTL": 3600,
            "Type": "CNAME"
          }
        ]
      }
    },
    "Cert": {
      "Type": "AWS::CertificateManager::Certificate",
      "Properties": {
        "DomainName": {
          "Fn::Sub": [
            "*.${RootDomainName}",
            { "RootDomainName": { "Ref": "MyDomainName" } }
          ]
        },
        "DomainValidationOptions": [
          {
            "DomainName": { "Ref": "MyDomainName" },
            "HostedZoneId": { "Ref": "HostedZone" }
          }
        ],
        "ValidationMethod": "DNS"
      }
    },
    "WebsiteCDN": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Aliases": [
            {
              "Fn::Sub": [
                "*.${RootDomainName}",
                { "RootDomainName": { "Ref": "MyDomainName" } }
              ]
            }
          ],
          "Comment": {
            "Fn::Sub": [
              "CloudFront for ${RootDomainName}. Managed by ${StackName} stack.",
              {
                "RootDomainName": { "Ref": "MyDomainName" },
                "StackName": { "Ref": "AWS::StackName" }
              }
            ]
          },
          "DefaultCacheBehavior": {
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "TargetOriginId": {
              "Fn::GetAtt": ["S3Bucket", "RegionalDomainName"]
            },
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "Origins": [
            {
              "DomainName": {
                "Fn::GetAtt": ["S3Bucket", "RegionalDomainName"]
              },
              "Id": { "Fn::GetAtt": ["S3Bucket", "RegionalDomainName"] },
              "OriginPath": "/www",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Sub": [
                    "origin-access-identity/cloudfront/${Id}",
                    { "Id": { "Ref": "MyCloudFrontOriginAccessIdentity" } }
                  ]
                }
              }
            }
          ],
          "ViewerCertificate": {
            "AcmCertificateArn": { "Ref": "Cert" },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only"
          }
        }
      }
    },
    "MyCloudFrontOriginAccessIdentity": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": {
            "Fn::Sub": [
              "CloudFront Id to access ${Bucket}",
              { "Bucket": { "Fn::GetAtt": ["S3Bucket", "RegionalDomainName"] } }
            ]
          }
        }
      }
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": { "Ref": "MyDomainName" },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        }
      }
    },
    "BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Sub": [
                    "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${Id}",
                    { "Id": { "Ref": "MyCloudFrontOriginAccessIdentity" } }
                  ]
                }
              },
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  ["arn:aws:s3:::", { "Ref": "S3Bucket" }, "/www/*"]
                ]
              }
            }
          ]
        },
        "Bucket": { "Ref": "S3Bucket" }
      }
    },
    "CodeBuildProject": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "EncryptionDisabled": true,
          "Location": { "Ref": "S3Bucket" },
          "Name": "/",
          "Path": "www",
          "Type": "S3"
        },
        "ConcurrentBuildLimit": 1,
        "Description": {
          "Fn::Sub": [
            "CodeBuild Project for ${RootDomainName}. Managed by ${StackName} stack.",
            {
              "RootDomainName": { "Ref": "MyDomainName" },
              "StackName": { "Ref": "AWS::StackName" }
            }
          ]
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "Type": "LINUX_CONTAINER"
        },
        "LogsConfig": {
          "S3Logs": {
            "EncryptionDisabled": true,
            "Location": {
              "Fn::Sub": [
                "${BucketArn}/build-log",
                {
                  "BucketArn": { "Fn::GetAtt": ["S3Bucket", "Arn"] }
                }
              ]
            },
            "Status": "ENABLED"
          }
        },
        "Name": "HelloYogaBuildProject",
        "ServiceRole": { "Fn::GetAtt": ["CodeBuildServiceRole", "Arn"] },
        "Source": {
          "Location": "https://github.com/michrome/hello-world",
          "Type": "GITHUB"
        },
        "SourceVersion": "main"
      }
    },
    "CodeBuildServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": ["codebuild.amazonaws.com"]
              },
              "Action": ["sts:AssumeRole"]
            }
          ]
        },
        "Description": "CodeBuild Service Role for Hello Yoga"
      }
    },
    "CodeBuildBasePolicy": {
      "Type": "AWS::IAM::ManagedPolicy",
      "Properties": {
        "Description": {
          "Fn::Sub": [
            "Policy used in trust relationship with CodeBuild",
            {
              "BucketName": { "Ref": "S3Bucket" }
            }
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Sub": [
                    "arn:aws:logs:${Region}:${AccountId}:log-group:/aws/codebuild/${CodeBuildProjectName}",
                    {
                      "Region": { "Ref": "AWS::Region" },
                      "AccountId": { "Ref": "AWS::AccountId" },
                      "CodeBuildProjectName": { "Ref": "CodeBuildProject" }
                    }
                  ]
                },
                {
                  "Fn::Sub": [
                    "arn:aws:logs:${Region}:${AccountId}:log-group:/aws/codebuild/${CodeBuildProjectName}:*",
                    {
                      "Region": { "Ref": "AWS::Region" },
                      "AccountId": { "Ref": "AWS::AccountId" },
                      "CodeBuildProjectName": { "Ref": "CodeBuildProject" }
                    }
                  ]
                }
              ],
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ]
            },
            {
              "Effect": "Allow",
              "Resource": [
                { "Fn::GetAtt": ["S3Bucket", "Arn"] },
                {
                  "Fn::Sub": [
                    "${BucketArn}/*",
                    {
                      "BucketArn": { "Fn::GetAtt": ["S3Bucket", "Arn"] }
                    }
                  ]
                }
              ],
              "Action": [
                "s3:ListBucket",
                "s3:PutObject"
              ]
            }
          ]
        },
        "Roles": [{ "Ref": "CodeBuildServiceRole" }]
      }
    }
  }
}
